plugins {
    id "java"
    id "java-gradle-plugin"
    id "checkstyle"
    id "com.gradle.plugin-publish" version "1.0.0"
}

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// This Gradle plugin is published under the group "gradle.plugin.org.embulk".
// We have an option to avoid the "gradle.plugin" prefix, but we don't do it as it bothers the Gradle team.
// They want Gradle plugins to be published under the "gradle.plugin" prefix for some security reasons.
// https://plugins.gradle.org/docs/publish-plugin
group = "org.embulk"
version = "0.5.4"
description = "A Gradle plugin to build and publish Embulk plugins"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
    implementation gradleApi()

    testImplementation gradleTestKit()
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
}

jar {
    metaInf {
        from rootProject.file("LICENSE")
        from rootProject.file("NOTICE")
    }
}

gradlePlugin {
    plugins {
        embulkPluginsPlugin {
            id = "org.embulk.embulk-plugins"
            displayName = "A Gradle plugin for Embulk plugins"
            description = "${project.description}"
            implementationClass = "org.embulk.gradle.embulk_plugins.EmbulkPluginsPlugin"
        }
    }
}

pluginBundle {
    website = "http://www.embulk.org/"
    vcsUrl = "https://github.com/embulk/gradle-embulk-plugins"
    tags = ["embulk"]
}

test {
    useJUnitPlatform()
    testLogging {
        outputs.upToDateWhen { false }
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
        showCauses = true
        showExceptions = true
        showStackTraces = true
        showStandardStreams = true
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

checkstyle {
    toolVersion "8.23"
    configFile = file("${projectDir}/config/checkstyle/checkstyle.xml")
    configProperties = [
        "checkstyle.config.path": file("${projectDir}/config/checkstyle")
    ]
    ignoreFailures = false
    maxWarnings = 0
}
